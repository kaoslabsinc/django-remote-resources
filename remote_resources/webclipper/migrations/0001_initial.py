# Generated by Django 4.1.2 on 2022-11-08 05:23

import building_blocks.models.interfaces
import dj_kaos_utils.models.mixins
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import rules.contrib.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(dj_kaos_utils.models.mixins.HasAutoFields, rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ClipperEndpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archived', models.BooleanField(default=False)),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('post_endpoint', models.CharField(max_length=255)),
                ('form', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webclipper.form')),
            ],
            options={
                'abstract': False,
            },
            bases=(building_blocks.models.interfaces.ArchivableInterface, dj_kaos_utils.models.mixins.HasAutoFields, rules.contrib.models.RulesModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FormField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('name', models.CharField(max_length=255)),
                ('order', models.PositiveIntegerField(default=9999999999999.0)),
                ('slug', models.SlugField(max_length=255)),
                ('type', models.CharField(choices=[('single_choice', 'Single Choice'), ('multi_choice', 'Multi Choice'), ('long_text', 'Long Text')], max_length=30)),
                ('choices', models.JSONField(blank=True, default=list)),
                ('choices_endpoint', models.CharField(blank=True, max_length=255)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='webclipper.form')),
            ],
            options={
                'ordering': ('form', 'order', 'id'),
                'abstract': False,
                'unique_together': {('form', 'slug')},
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model),
        ),
    ]
